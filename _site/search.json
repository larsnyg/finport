[
  {
    "objectID": "eod.html",
    "href": "eod.html",
    "title": "EOD API",
    "section": "",
    "text": "library(ggplot2)\nreticulate::source_python(\"inst/python/eod_fun.py\")\naapl <- get_prices_eod(\"AAPL.US\")\naapl$date <- as.Date(aapl$date)\nplot <- ggplot(aapl, aes(date, adjusted_close)) + geom_line() \nprint(plot)\n\n\n\n\n\nlibrary(reticulate)\nreticulate::source_python(\"inst/python/eod_fun.py\")\n\nexchanges <- get_exchanges()\nexchanges <- data.table::rbindlist(exchanges)\nknitr::kable(exchanges)\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nCode\nOperatingMIC\nCountry\nCurrency\nCountryISO2\nCountryISO3\n\n\n\n\nUSA Stocks\nUS\nXNAS, XNYS\nUSA\nUSD\nUS\nUSA\n\n\nLondon Exchange\nLSE\nXLON\nUK\nGBP\nGB\nGBR\n\n\nTSX Venture Exchange\nV\nXTSX\nCanada\nCAD\nCA\nCAN\n\n\nToronto Exchange\nTO\nXTSE\nCanada\nCAD\nCA\nCAN\n\n\nNEO Exchange\nNEO\nNEOE\nCanada\nCAD\nCA\nCAN\n\n\nXETRA Exchange\nXETRA\nXETR\nGermany\nEUR\nDE\nDEU\n\n\nDusseldorf Exchange\nDU\nXDUS\nGermany\nEUR\nDE\nDEU\n\n\nHamburg Exchange\nHM\nXHAM\nGermany\nEUR\nDE\nDEU\n\n\nHanover Exchange\nHA\nXHAN\nGermany\nEUR\nDE\nDEU\n\n\nMunich Exchange\nMU\nXMUN\nGermany\nEUR\nDE\nDEU\n\n\nStuttgart Exchange\nSTU\nXSTU\nGermany\nEUR\nDE\nDEU\n\n\nFrankfurt Exchange\nF\nXFRA\nGermany\nEUR\nDE\nDEU\n\n\nBerlin Exchange\nBE\nXBER\nGermany\nEUR\nDE\nDEU\n\n\nVienna Exchange\nVI\nXWBO\nAustria\nEUR\nAT\nAUT\n\n\nLuxembourg Stock Exchange\nLU\nXLUX\nLuxembourg\nEUR\nLU\nLUX\n\n\nBorsa Italiana\nMI\nXMIL\nItaly\nEUR\nIT\nITA\n\n\nEuronext Paris\nPA\nXPAR\nFrance\nEUR\nFR\nFRA\n\n\nEuronext Brussels\nBR\nXBRU\nBelgium\nEUR\nBE\nBEL\n\n\nMadrid Exchange\nMC\nBMEX\nSpain\nEUR\nES\nESP\n\n\nSwiss Exchange\nVX\nXSWX\nSwitzerland\nCHF\nCH\nCHE\n\n\nSIX Swiss Exchange\nSW\nXSWX\nSwitzerland\nCHF\nCH\nCHE\n\n\nEuronext Lisbon\nLS\nXLIS\nPortugal\nEUR\nPT\nPRT\n\n\nEuronext Amsterdam\nAS\nXAMS\nNetherlands\nEUR\nNL\nNLD\n\n\nStockholm Exchange\nST\nXSTO\nSweden\nSEK\nSE\nSWE\n\n\nTallinn Exchange\nTL\nXTAL\nEstonia\nEUR\nEE\nEST\n\n\nIrish Exchange\nIR\nXDUB\nIreland\nEUR\nIE\nIRL\n\n\nCopenhagen Exchange\nCO\nXCSE\nDenmark\nDKK\nDK\nDNK\n\n\nOslo Stock Exchange\nOL\nXOSL\nNorway\nNOK\nNO\nNOR\n\n\nVilnus Exchange\nVS\nXLIT\nLithuania\nEUR\nLT\nLTU\n\n\nRiga Exchange\nRG\nXRIS\nLatvia\nEUR\nLV\nLVA\n\n\nNasdaq Baltic\nNB\nNA\nEstonia\nEUR\nEE\nEST\n\n\nFirst North Denmark\nNFN\nXCSE\nSweden\nSEK\nSE\nSWE\n\n\nIceland Exchange\nIC\nXICE\nIceland\nISK\nIS\nISL\n\n\nHelsinki Exchange\nHE\nXHEL\nFinland\nEUR\nFI\nFIN\n\n\nPrague Stock Exchange\nPR\nXPRA\nCzech Republic\nCZK\nCZ\nCZE\n\n\nHong Kong Exchange\nHK\nXHKG\nHong Kong\nHKD\nHK\nHKG\n\n\nTel Aviv Exchange\nTA\nXTAE\nIsrael\nILS\nIL\nISR\n\n\nKOSDAQ\nKQ\nXKOS\nKorea\nKRW\nKR\nKOR\n\n\nKorea Stock Exchange\nKO\nXKRX\nKorea\nKRW\nKR\nKOR\n\n\nBudapest Stock Exchange\nBUD\nXBUD\nHungary\nHUF\nHU\nHUN\n\n\nPhilippine Stock Exchange\nPSE\nXPHS\nPhilippines\nPHP\nPH\nPHL\n\n\nWarsaw Stock Exchange\nWAR\nXWAR\nPoland\nPLN\nPL\nPOL\n\n\nSingapore Exchange\nSG\nXSES\nSingapore\nSGD\nSG\nSGP\n\n\nBombay Exchange\nBSE\nXBOM\nIndia\nINR\nIN\nIND\n\n\nThailand Exchange\nBK\nXBKK\nThailand\nTHB\nTH\nTHA\n\n\nKarachi Stock Exchange\nKAR\nXKAR\nPakistan\nPKR\nPK\nPAK\n\n\nShenzhen Exchange\nSHE\nXSHE\nChina\nCNY\nCN\nCHN\n\n\nAustralia Exchange\nAU\nXASX\nAustralia\nAUD\nAU\nAUS\n\n\nAthens Exchange\nAT\nASEX\nGreece\nEUR\nGR\nGRC\n\n\nTokyo Stock Exchange\nTSE\nXJPX\nJapan\nJPY\nJP\nJPN\n\n\nSaudi Arabia Exchange\nSR\nXSAU\nSaudi Arabia\nSAR\nSA\nSAU\n\n\nJohannesburg Exchange\nJSE\nXJSE\nSouth Africa\nZAR\nZA\nZAF\n\n\nNSE (India)\nNSE\nXNSE\nIndia\nINR\nIN\nIND\n\n\nShanghai Exchange\nSHG\nXSHG\nChina\nCNY\nCN\nCHN\n\n\nJakarta Exchange\nJK\nXIDX\nIndonesia\nIDR\nID\nIDN\n\n\nChilean Stock Exchange\nSN\nXSGO\nChile\nCLP\nCL\nCHL\n\n\nColombo Stock Exchange\nCM\nXCOL\nSri Lanka\nLKR\nLK\nLKA\n\n\nVietnam Stocks\nVN\nHSTC\nVietnam\nVND\nVN\nVNM\n\n\nKuala Lumpur Exchange\nKLSE\nXKLS\nMalaysia\nMYR\nMY\nMYS\n\n\nSao Paolo Exchange\nSA\nBVMF\nBrazil\nBRL\nBR\nBRA\n\n\nBucharest Stock Exchange\nRO\nXBSE\nRomania\nRON\nRO\nROU\n\n\nBuenos Aires Exchange\nBA\nXBUE\nArgentina\nARS\nAR\nARG\n\n\nMexican Exchange\nMX\nXMEX\nMexico\nMXN\nMX\nMEX\n\n\nLondon IL\nIL\nXLON\nUK\nUSD\nGB\nGBR\n\n\nZagreb Stock Exchange\nZSE\nXZAG\nCroatia\nHRK\nHR\nHRV\n\n\nEU Bond Virtual Exchange\nEUBOND\nNA\nBelgium\nEUR\nBE\nBEL\n\n\nIndices\nINDX\nNA\nUnknown\nUnknown\n\n\n\n\nIstanbul Stock Exchange\nIS\nXIST\nTurkey\nTRY\nTR\nTUR\n\n\nBolsa de Valores de Lima\nLIM\nXLIM\nPeru\nPEN\nPE\nPER\n\n\nGovernment Bonds\nGBOND\nNA\nUnknown\nUnknown\n\n\n\n\nBorsa Italiana Certificates\nETLX\nNA\nItaly\nEUR\nIT\nITA\n\n\nMoney Market Virtual Exchange\nMONEY\nNA\nUnknown\nUnknown\n\n\n\n\nEurope Fund Virtual Exchange\nEUFUND\nNA\nUnknown\nEUR\n\n\n\n\nBond Virtual Exchange\nBOND\nNA\nUSA\nUSD\nUS\nUSA\n\n\nCryptocurrencies\nCC\nCRYP\nUnknown\nUnknown\n\n\n\n\nCommodities\nCOMM\nNA\nUnknown\nUnknown\n\n\n\n\nFOREX\nFOREX\nCDSL\nUnknown\nUnknown\n\n\n\n\nTaiwan OTC Exchange\nTWO\nROCO\nTaiwan\nTWD\nTW\nTWN\n\n\nMICEX Moscow Russia\nMCX\nNA\nRussia\nRUB\nRU\nRUS\n\n\nTaiwan Exchange\nTW\nXTAI\nTaiwan\nTWD\nTW\nTWN\n\n\nCanadian Securities Exchange\nCN\nXCNQ\nCanada\nCAD\nCA\nCAN"
  },
  {
    "objectID": "viz.html",
    "href": "viz.html",
    "title": "Visualizations",
    "section": "",
    "text": "data = d3.csv(\"https://eodhistoricaldata.com/api/eod/AAPL.US?from=2021-01-01&period=d&api_token=5b2b58da20bd52.76199398&\", d3.autoType)\ndata\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nviewof bill_length_min = Inputs.range(\n  [32, 50], \n  {value: 35, step: 1, label: \"Bill length (min):\"}\n)\nviewof islands = Inputs.checkbox(\n  [\"Torgersen\", \"Biscoe\", \"Dream\"], \n  { value: [\"Torgersen\", \"Biscoe\"], \n    label: \"Islands:\"\n  }\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfiltered = data.filter(function(penguin) {\n  return bill_length_min < penguin.bill_length &&\n         islands.includes(penguin.island);\n})\n\n\n\n\n\n\n\nPlot.plot({\n  width: 600,\n  height: 400,\n  caption: \"APPLE stock price\",\n  style: {\n    background: \"#7e9a9a\"\n  },\n  marks: [\n    Plot.line(data, {x: \"Date\", y: \"Close\"}),\n  ]\n})\n\n\n\n\n\n\n\nalphabet = FileAttachment(\"data/alphabet.csv\").csv()\nalphabet\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlot.plot({\n  marks: [\n    Plot.barY(alphabet, {x: \"letter\", y: \"frequency\", fill: \"steelblue\"}),\n    Plot.ruleY([0])\n  ]\n})"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "finportaQuatro",
    "section": "",
    "text": "To learn more about Quarto websites visit https://quarto.org/docs/websites.\n\nReact Table\n\nlibrary(reactable)\nreactable::reactable(iris)\n\n\n\n\n\n\n\n\nGGPlot\n\nlibrary(ggplot2)\nggplot2::ggplot(iris, aes(Sepal.Length, Sepal.Width)) + geom_point()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Datascience with Quatro"
  }
]